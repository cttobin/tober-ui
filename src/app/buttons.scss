@mixin button ($background-color, $color: $button-color) {
  background-color: $background-color;
  color: $color;
  border: $button-outline-border-width solid $background-color;
  &:hover {
    background-color: darken($background-color, 4%);
    border: $button-outline-border-width solid darken($background-color, 4%);
  }
  &.tob-outline-button {
    background-color: transparent;
    color: $background-color;
    &:hover {
      background-color: $background-color;
      color: $color;
    }
  }
}

.tob-button {
  @include button($balanced);
  margin-top: $padding-base;
  text-transform: uppercase;
  font-size: 14px;
  font-weight: bold;
  line-height: $button-height - $button-outline-border-width;
  padding: 0 $padding-xx-large;
  color: $button-color;
  display: inline-block;
  border-radius: $button-border-radius;
  background-color: $balanced;
  cursor: pointer;
  transition: box-shadow 0.25s linear, background-color 0.25s linear, border 0.25s linear;
  &:active {
    box-shadow: $button-shadow-active;
  }
  i {
    margin-right: 8px;
  }
  &.tob-balanced {
    @include button($balanced);
  }
  &.tob-positive {
    @include button($positive);
  }
  &.tob-negative {
    @include button($negative);
  }
  &.tob-light {
    @include button(darken($light, 10%), $dark);
  }
  &.tob-dark {
    @include button($dark);
  }
}

button.tob-button {
  border: none;
}

.tob-block-button {
  @extend .tob-button;
  display: block;
  text-align: center;
}

a.tob-button {
  text-decoration: none;
}

button:focus {
  outline: none;
}

button[disabled] {
  opacity: 0.5;
  cursor: not-allowed;
}

.tob-fixed-width-button {
  position: relative;
  i {
    position: absolute;
    right: $padding-xx-large;
    top: 50%;
    margin-top: -15px;
    line-height: 30px;
  }
}


// TODO: Button sizes.

/** TODO: apply smart colours when buttons on a colourful element. Something like this:

  .tob-header.tob-positive {
    .tob-button.tob-positive {
      @include button($background-color, $font-colour)
    }
  }

*/
